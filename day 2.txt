1. Write a program to reverse a number using loop?(Get the input from user)
Sample Input:
Number: 14567
Sample Output:
Reverse Number: 76541
Test cases:
1. -45721
2. 000
3. AD1947
4. !@#$%
5. 145*999=144855
2. Find the LCM and GCD of n numbers?
Sample Input:
N value = 2
Number 1 = 16
Number 2 = 20
Sample Output:
LCM = 80
GCD = 4
Test cases:
1. N = 3, {12, 25, 30}
2. N = 2, {52, 25, 63}
3. N = 3, {17, 19, 11}
4. N = -2, {52, 60}
5. N = 2, {30, 45}
3. Write a program to print the below pattern? 
1
1 1
1 2 1
1 3 3 1
1 4 6 4 1
4. Java Program to Find Even Sum of Fibonacci Series Till number N?
Sample Input: n = 4
Sample Output: 33
(N = 4, So here the fibonacci series will be produced from 0th term till 8th term:0, 1, 1, 2, 
 3, 5, 8, 13, 21 Sum of numbers at even indexes = 0 + 1 + 3 + 8 + 21 = 33)
5. Write a program to print the numbers from M to N by skipping K numbers in between?
Sample Input:
M = 50
N = 100
K = 7
Sample Output:
50, 58, 66, 74, â€¦..
Test cases:
1. M = 15, N = 05, K = 02
2. .M = 25, N = 50, K = 04
3. M = 15, N = 100, K = -02
4. M = 0 , N = 0 , K = 2
5. M = 200 , N = 200 , K = 50
6. Write a program that would sort a list of names in alphabetical order Ascending or 
Descending, choice get from the user?
Sample Input:
Banana
Carrot
Radish
Apple
Jack
Order (A/D): A
Sample Output:
Apple
Banana
Carrot
Jack
Radish
7. Write a program to count all the prime and composite numbers entered by the user.
Sample Input:
Enter the numbers 
4
54
29
71
7
59
98
23
Sample Output:
Composite number: 3
Prime number: 5
Test cases:
1. 33, 41, 52, 61,73,90
2. TEN, FIFTY, SIXTY-ONE, SEVENTY-SEVEN, NINE
3. 45, 87, 09, 5.0 ,2.3, 0.4
4. -54, -76, -97, -23, -33, -98
5. 45, 73, 00, 50, 67, 44
8. Write a program to print the total amount available in the ATM machine with the conditions 
applied. Total denominations are 2000, 500, 200, 100, get the denomination priority from the 
user and the total number of notes from the user to display the total available balance to the 
user
Sample Input:
Enter the 1st Denomination: 500
Enter the 1st Denomination number of notes: 4
Enter the 2nd Denomination: 100
Enter the 2nd
 Denomination number of notes: 20
Enter the 3rd
 Denomination: 200
Enter the 3rd Denomination number of notes: 32
Enter the 4th Denomination: 2000
Enter the 4th Denomination number of notes: 1
Sample Output:
Total Available Balance in ATM: 12400
Test Cases: Hidden Test cases (Think Accordingly based on Denominations)
9. Write a program to print the first n perfect numbers. (Hint Perfect number means a positive 
integer that is equal to the sum of its proper divisors)
Sample Input:
N = 3
Sample Output:
First 3 perfect numbers are: 6 , 28 , 496
Test Cases:
1. N = 0
2. N = 5
3. N = -2
4. N = -5
5. N = 0.2
10. Write a program to enter the marks of a student in four subjects. Then calculate the total and 
aggregate, display the grade obtained by the student. If the student scores an aggregate 
greater than 75%, then the grade is Distinction. If aggregate is 60>= and <75, then the grade 
is First Division. If aggregate is 50 >= and <60, then the grade is Second Division. If 
aggregate is 40>= and <50, then the grade is Third Division. Else the grade is Fail.
Sample Input & Output:
Enter the marks in python: 90
Enter the marks in c programming: 91
Enter the marks in Mathematics: 92
Enter the marks in Physics: 93
Total= 366
Aggregate = 91.5
DISTINCTION
Test cases:
a) 18, 76,93,65
b) 73,78,79,75
c) 98,106,120,95
d) 96,73, -85,95
e) 78,59.8,76,79
11. Write a Program to create a list of all numbers in a range which are perfect squares and the 
sum of the digits of the number is less than 10.
Sample Input & Output:
Enter lower range: 1
Enter upper range: 40
[1, 4, 9, 16, 25, 36] 
Test case:
1. Enter lower range: 50
 Enter upper range: 100
2. Enter lower range: 5
 Enter upper range: 8
3. Enter lower range: 10
 Enter upper range: 5
4. Enter lower range: 500
 Enter upper range: 500
5. Enter lower range: 0
 Enter upper range: -100
12. Write a program to print unique permutations of a given number
Sample Input:
Given Number: 143
Sample Output:
Permutations are:
134
143
314
341
413
431
Test cases:
1. 0
2. 111
3. 505
4. -143
5. -598
